package main.java.AlgorithmProgrammingTutorial.Lesson8;

// 2022-03-23 시작

// 병합 정렬 (Merge Sort)

// 대표적인 분할 정복 방법을 채택한 알고리즘
// 결과적으로 퀵과 동일하게 시간복잡도를 O(N * logN)으로 가진다.

// 다만 피봇 값에 따라서 편향되게 분할할 가능성이 있기 때문에 최악의경우 O(N^2)의 시간 복잡도를 가진다.
// 병합 정렬은 정확히 반절씩 나눈다는 점에서 최악의 경우에도 O(N * logN)의 시간 복잡도를 보장한다.

//문제

// 다음의 숫자들을 오름차순으로 정렬하는 프로그램을 작성하세요.
// 7 6 5 8 3 5 9 1

// 병합 정렬은 하나의 큰 문제를 두 개의 작은 문제로 분할한 뒤 각자 계산하고 나중에 합치는 방법 채택
// 즉 기본 아이디어는 일단 정확히 반으로 나누고 나중에 정렬하는 것


// 일단 반으로 나누고 나중에 합쳐서 정렬하면 어떨까?

// 7 6 5 8 3 5 9 1

// 손코딩

// 크기가 1인 배열 형태로 시작한다.

 // 이제 첫번째 단계에서는 각 배열의 크기가 2이다.
// [6, 7], [5, 8], [3, 5], [1, 9]

//배열의 크기가 4
// [5, 6, 7, 8], [1, 3, 5, 9]

// 배열의 크기가 8
// [1, 3, 5, 5, 6, 7, 8, 9]




public class MergeSort {

    public static void main(String[] args) {

    }
}
