package main.java.AlgorithmProgrammingTutorial.Lesson3;

// 2022-03-23 시작
public class BubbleSort {

    // 버블 정렬 (Bubble Sort)

    // 문제는 지난 시간과 동일

    // 다음의 숫자들을 오름차순으로 정렬하는 프로그램을 작성하세요.

    // 1 10 5 8 7 6 4 3 2 9

    // 옆에 있는 값과 비교해서 더 작은 값을 앞으로 보내면?

    // 버블 정렬이란 옆에 있는 값과 비교하여 더 작은 값을 반복적으로
    // 앞으로 보내는 정렬 방법
    // 구현은 가장 쉽지만 가장 비효율적인 알고리즘

    // 손코딩

    // 1 10 5 8 7 6 4 3 2 9 - 1 10 비교

    // 1 10 5 8 7 6 4 3 2 9 - 10 5 비교

    // 1 5 10 8 7 6 4 3 2 9 - 10 8 비교

    // 1 5 8 10 7 6 4 3 2 9 - 10 7 비교

    // 1 5 8 7 10 6 4 3 2 9 - 10 6 비교

    // 1 5 8 7 6 10 4 3 2 9 - 10 4 비교

    // 1 5 8 7 6 4 10 3 2 9 - 10 3 비교

    // 1 5 8 7 6 4 3 10 2 9 - 10 2 비교

    // 1 5 8 7 6 4 3 2 10 9 - 10 9 비교

    // 1 5 8 7 6 4 3 2 9 10 - 10 9 비교

    // 1 5 8 7 6 4 3 2 9 10 - 1 5 비교

    // 1 5 8 7 6 4 3 2 9 10 - 5 8 비교

    // 1 5 7 8 6 4 3 2 9 10 - 8 7 비교

    // 1 5 7 8 6 4 3 2 9 10 - 8 6 비교

    // 1 5 7 6 8 4 3 2 9 10 - 8 4 비교

    // 1 5 7 6 4 8 3 2 9 10 - 8 3 비교

    // 1 5 7 6 4 3 8 2 9 10 - 8 2 비교

    // 1 5 7 6 4 3 2 8 9 10 - 8 9 비교

    // 1 5 7 6 4 3 2 8 9 10 - 9 10 비교

    // 1 5 7 6 4 3 2 8 9 10 -...

    // 이런 식으로 한 번의 반복이 끝났을 때 가장 큰 값이 마지막으로 가게 됨







    public static void main(String[] args) {

        int temp;
        int[] array = {1,10,5,8,7,6,4,3,2,9};

        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 9-i; j++) { // 뒤에서부터 집합의 크기를 하나씩 감소시키기 때문
                if(array[j] > array[j+1]){
                    temp = array[j];
                    array[j] = array[j+1];
                    array[j+1] = temp;
                }
            }
        }

        for (int i = 0; i < 10; i++) {
            System.out.println(array[i]);
        }

    }
}

// 간단하고 직관적인 정렬

// 선택정렬보다는 구현이 쉬움( min도 필요없고..이런거)

// 1 2 3 4 5 6 7 8 9 10

// 10 + 9 + 8 + 7 + ... + 1

// 55

// O(N * N)

// 선택정렬과 같은 시간 복잡도를 가지고 있지만
// 실제로 이걸 작동시키면 선택 정렬보다 훨씬 느리게 작동

// 이유 : 버블은 당장 옆의 것과 비교해서 자리를 바꾸는 연산 수행

// 자리를 바꾸는 연산은 이렇게 총 세 개의 명령어를 수행하기 때문에
// 실제로 수행하는 것은 훨씬 많은 것

// 선택은 가장 작은 걸 하나 골라서 마지막에만 교체
// 버블은 매번 교체하기 때문에 훨씬 비효율적


